{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState={value:25};const sessionSlice=createSlice({name:\"session\",initialState,reducers:{incrementSession:state=>{if(state.value===60)return;state.value++;},decrementSession:state=>{if(state.value<=0)return;state.value--;},resetSession:state=>{state.value=initialState.value;}}});export const{incrementSession,decrementSession,resetSession}=sessionSlice.actions;export default sessionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","sessionSlice","name","reducers","incrementSession","state","decrementSession","resetSession","actions","reducer"],"sources":["/home/ayman/Documents/GitHub/pomodoro-react-redux-mui-styled/src/state/session/sessionReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    value: 25,\n};\n\nconst sessionSlice = createSlice({\n    name: \"session\",\n    initialState,\n    reducers: {\n        incrementSession: (state) => {\n            if(state.value === 60) return\n            state.value++;\n        },\n        decrementSession: (state) => {\n            if(state.value <= 0) return\n            state.value--;\n        },\n        resetSession: (state) => {\n            state.value = initialState.value\n        }\n    },\n});\n\nexport const { incrementSession,decrementSession,resetSession } = sessionSlice.actions;\nexport default sessionSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACjBC,KAAK,CAAE,EACX,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGH,WAAW,CAAC,CAC7BI,IAAI,CAAE,SAAS,CACfH,YAAY,CACZI,QAAQ,CAAE,CACNC,gBAAgB,CAAGC,KAAK,EAAK,CACzB,GAAGA,KAAK,CAACL,KAAK,GAAK,EAAE,CAAE,OACvBK,KAAK,CAACL,KAAK,EAAE,CACjB,CAAC,CACDM,gBAAgB,CAAGD,KAAK,EAAK,CACzB,GAAGA,KAAK,CAACL,KAAK,EAAI,CAAC,CAAE,OACrBK,KAAK,CAACL,KAAK,EAAE,CACjB,CAAC,CACDO,YAAY,CAAGF,KAAK,EAAK,CACrBA,KAAK,CAACL,KAAK,CAAGD,YAAY,CAACC,KAAK,CACpC,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEI,gBAAgB,CAACE,gBAAgB,CAACC,YAAa,CAAC,CAAGN,YAAY,CAACO,OAAO,CACtF,cAAe,CAAAP,YAAY,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}